#include "form.h"
#include "ui_form.h"

Form::Form(QWidget* parent) : QWidget(parent), ui(new Ui::Form) {
  ui->setupUi(this);
  setFixedSize(500, 500);
  QString text =
      "\t1. Запросить у пользователя ввести один абзац текста (до нажатия "
      "Enter'a) и сохранить данный текст в текстовый файл "
      "посредством посимвольной записи. \n"
      "\n\t2. Посимвольно считать из текстового файла "
      "и вывести его на экран. \n"
      "\n\t3. Запросить у пользователя размер массива и вводимые значения "
      "элементов массива. Сохранить эти элементы массива в текстовый файл "
      "посредством потокового ввода "
      "(направляющие скобки << ). Записываемые значения разделять "
      "символами пробела. \n"
      "\n\t4. Считать из текстового файла "
      "элементы массива посредством потокового вывода (направляющие скобки "
      ">> ) и вывести на экран считанный из файла массив (его элементы), "
      "разделяя печатаемые значения символом пробела. \n"
      "\n\t5. Сохранить содержимое всех полей структуры в текстовый файл "
      "Использовать режим дозаписи файла "
      "(записи в конец файла), чтобы в файл записывались все вводимые "
      "пользователем структуры. \n"
      "\n\t6. Прочитать из текстового файла все "
      "записанные в нем структуры и распечатать содержимое их полей на "
      "экран, разделяя содержимое полей символами «|». Программа читает их "
      "из файла до тех пор, пока есть что читать из файла. \n"
      "\n\t7. Сохранить содержимое всех полей структуры в бинарный файл "
      "посредством функции "
      "write((char*)&записываемыйЭлемент,"
      "размерЗаписываемогоЭлементаВБайтах). Использовать режим дозаписи "
      "файла, чтобы в файл записывались все вводимые "
      "пользователем структуры. \n"
      "\n\t8. Прочитать из бинарного файла все "
      "записанные в нем структуры с помощью функции read( "
      "(char*)&считываемыйЭлемент, размерСчитываемогоЭлементаВБайтах ) и "
      "распечатать содержимое их полей на экран, разделяя содержимое полей "
      "символами “ ; ”. Программа читает их из файла до тех пор, пока есть "
      "что читать из файла. \n"
      "\n\t9. Запросить у пользователя ввести предложение (слова с пробелами, "
      "завершается нажатием Enter'a) и дописать данное предложение в "
      "текстовый файл в виде отдельной строки. \n"
      "\n\t10. Считать из текстового файла "
      "все предложения и вывести их на экран.\n"
      "\n\t11. Выход";

  ui->textBrowser->setText(text);
}

Form::~Form() {
  delete ui;
}
